function e(e,n,t,r){Object.defineProperty(e,n,{get:t,set:r,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},o={},a=t.parcelRequire1861;null==a&&((a=function(e){if(e in r)return r[e].exports;if(e in o){var n=o[e];delete o[e];var t={id:e,exports:{}};return r[e]=t,n.call(t.exports,t,t.exports),t.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,n){o[e]=n},t.parcelRequire1861=a),a.register("27Lyk",(function(n,t){var r,o;e(n.exports,"register",(()=>r),(e=>r=e)),e(n.exports,"resolve",(()=>o),(e=>o=e));var a={};r=function(e){for(var n=Object.keys(e),t=0;t<n.length;t++)a[n[t]]=e[n[t]]},o=function(e){var n=a[e];if(null==n)throw new Error("Could not resolve bundle with id "+e);return n}})),a("27Lyk").register(JSON.parse('{"jRPZQ":"index.2a0c49e1.js","dODtX":"icons.c14567a0.svg"}'));const s={countries:[],gridItems:[],currentRegion:"all",isDarkMode:!1,isInsideCountry:!1},i={mainDark:"dark-mode-parent",secondaryDark:"dark-mode-child",lightBlackText:"var(--light-mode-text)",lightGrayText:"var(--very-light-gray)",header:document.querySelector("header"),themeBtn:document.querySelector(".theme-btn"),backBtn:document.querySelector(".back-btn"),searchBox:document.querySelector(".search-box"),searchInput:document.querySelector(".search-input"),selected:document.querySelector(".selected"),optionsContainer:document.querySelector(".options-container"),arrowUp:document.querySelector(".fa-arrow-up"),gridContainer:document.querySelector(".grid-container"),parentDetailsContainer:document.querySelector(".parent-country-details-container"),detailsContainer:document.querySelector(".details-container"),gridItemTitle:".item-title",flagContainer:".flag-container",details:".country-details-container",neighbor:".neighbor"},c=function(){s.gridItems.forEach((e=>{e.classList.toggle(i.secondaryDark)}))},l=function(){s.isDarkMode=!s.isDarkMode,document.querySelector("body").classList.toggle(i.mainDark),document.querySelector("body").style.color=s.isDarkMode?i.lightGrayText:i.lightBlackText,i.header.classList.toggle(i.secondaryDark),i.selected.classList.toggle(i.secondaryDark),i.searchBox.classList.toggle(i.secondaryDark),i.searchInput.classList.toggle(i.secondaryDark),i.backBtn.classList.toggle(i.secondaryDark),s.isInsideCountry&&document.querySelectorAll(i.neighbor).forEach((e=>e.classList.toggle(i.secondaryDark))),i.optionsContainer.classList.toggle(i.secondaryDark),c()};var d;d=new URL(a("27Lyk").resolve("dODtX"),import.meta.url).toString();const u=function(e){const t=`\n  <div class="spinner">\n    <svg>\n      <use href="${n(d)}#icon-loader"></use>\n    </svg>\n  </div>\n`;document.querySelector(e).insertAdjacentHTML("beforeend",t)},g=async function(e){try{const n="all"===e?"https://restcountries.com/v3.1/all":(e=>`https://restcountries.com/v3.1/region/${e}`)(e),t=await fetch(n);(s.countries=await t.json()).forEach((e=>{var n;i.gridContainer.insertAdjacentHTML("beforeend",`\n        <div class="grid-item" >\n        <img\n          src="${(n=e).flags.svg}"\n          alt="image-1"\n          width="300"\n          height="200"\n        />\n        <div class="content-details">\n          <h2 class="item-title">${n.name.common}</h2>\n          <p class="item-population">Population: <span>${n.population.toLocaleString("en-US")}</span></p>\n          <p class="item-region">Region: <span>${n.region}</span></p>\n          <p class="item-capital">Capital: <span>${n.capital??"N/A"}</span></p>\n        </div>\n      </div>\n`)})),s.gridItems=document.querySelectorAll(".grid-item"),s.isDarkMode&&c(),document.querySelector(".spinner").remove()}catch(e){console.log(e)}},p=function(){i.optionsContainer.classList.toggle("active"),i.arrowUp.classList.toggle("active")},m=function(e){const n=e.target;s.currentRegion!==n.dataset.region&&(u("body"),document.querySelector(`.${s.currentRegion}`).classList.remove("active"),document.querySelector(`.${n.dataset.region}`).classList.add("active"),s.currentRegion=n.dataset.region,s.gridItems.forEach((e=>e.remove())),g(n.dataset.region))},y=async function(e){try{const t=await fetch((n=e,`https://restcountries.com/v3.1/name/${n}?fullText=true`)),[r]=await t.json(),o=await async function(e){return e?await Promise.all(e.map((async e=>{const n=await fetch((t=e,`https://restcountries.com/v3.1/alpha/${t}`));var t;const[r]=await n.json();return r.name.common}))):["No border countries"]}(r.borders);i.gridContainer.classList.add("deactive"),i.parentDetailsContainer.classList.add("active"),i.detailsContainer.insertAdjacentHTML("beforeend",function(e,n){return`\n  <div class="flag-container">\n    <img src="${e.flags.svg}" alt="Flag image" />\n  </div>\n\n  <div class="country-details-container">\n    <h2 class="country-title">${e.name.common}</h2>\n    <div class="country-details">\n      <p class="country-native-name">Native Name: <span>${Object.values(e.name.nativeName)[0].official}</span></p>\n      <p class="country-population">Population:  <span>${e.population.toLocaleString("en-US")}</span></p>\n      <p class="country-region">Region: <span>${e.region}</span></p>\n      <p class="country-subregion">Region: <span>${e.subregion}</span></p>\n      <p class="country-capital">Capital: <span>${e.capital??"N/A"}</span></p>\n      <p class="country-domain">Top Level Domain: <span>${e.tld[0]}</span></p>\n      <p class="country-languages">Languages: <span>${Object.values(e.languages).join(", ")}</span></p>\n      <p class="country-currency">Currencies: <span>${Object.values(e.currencies)[0].name}</span></p>\n    </div>  \n\n    <div class="border-countries">\n      <h4 class="border-country-title">Border Countries:</h4>\n\n      <div class="country-neighbors">\n        ${n.map((e=>`<p class="neighbor">${e}</p>`)).join(" ")}\n      </div>\n    </div>\n  </div>\n  `}(r,o)),s.isInsideCountry=!0,s.isDarkMode&&s.isInsideCountry&&document.querySelectorAll(i.neighbor).forEach((e=>e.classList.toggle(i.secondaryDark)))}catch(e){console.log(e)}var n},v=function(e){const n=e.target.closest(".grid-item");if(!n)return;const t=n.querySelector(i.gridItemTitle).textContent;y(t)},f=function(){const e=this.value.toLowerCase();s.gridItems.forEach((n=>{const t=n.querySelector(i.gridItemTitle).textContent.toLowerCase();n.style.display=t.indexOf(e)>-1?"":"none"}))},h=function(){document.querySelector(i.flagContainer).remove(),document.querySelector(i.details).remove(),i.gridContainer.classList.remove("deactive"),i.parentDetailsContainer.classList.remove("active"),s.isInsideCountry=!1};var b;u("body"),g(s.currentRegion),b=l,i.themeBtn.addEventListener("click",b),(e=>{i.selected.addEventListener("click",e)})(p),(e=>{i.optionsContainer.addEventListener("click",e)})(m),(e=>{i.gridContainer.addEventListener("click",e)})(v),(e=>{i.searchInput.addEventListener("keyup",e)})(f),(e=>{i.backBtn.addEventListener("click",e)})(h);
//# sourceMappingURL=index.2a0c49e1.js.map
