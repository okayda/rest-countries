function e(e,t,n,o){Object.defineProperty(e,t,{get:n,set:o,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},r={},a=n.parcelRequire1861;null==a&&((a=function(e){if(e in o)return o[e].exports;if(e in r){var t=r[e];delete r[e];var n={id:e,exports:{}};return o[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){r[e]=t},n.parcelRequire1861=a),a.register("27Lyk",(function(t,n){var o,r;e(t.exports,"register",(()=>o),(e=>o=e)),e(t.exports,"resolve",(()=>r),(e=>r=e));var a={};o=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)a[t[n]]=e[t[n]]},r=function(e){var t=a[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),a("27Lyk").register(JSON.parse('{"jRPZQ":"index.8032e45a.js","dODtX":"icons.c14567a0.svg"}'));const i={countries:[],gridItems:[],currentRegion:"all",isDarkMode:!1,isInsideCountry:!1},s={themeBtn:document.querySelector(".theme-btn"),backBtn:document.querySelector(".back-btn"),searchInput:document.querySelector(".search-input"),selected:document.querySelector(".selected"),optionsContainer:document.querySelector(".options-container"),arrowUp:document.querySelector(".fa-arrow-up"),gridContainer:document.querySelector(".grid-container"),parentDetailsContainer:document.querySelector(".parent-country-details-container"),detailsContainer:document.querySelector(".details-container"),flagContainer:".flag-container",details:".country-details-container",gridItemTitle:".item-title"},c=function(){i.gridItems.forEach((e=>{e.classList.toggle("dark-mode-child")}))},l=function(){i.isDarkMode=!i.isDarkMode,document.querySelector("body").classList.toggle("dark-mode-parent"),document.querySelector("body").style.color=i.isDarkMode?"var(--very-light-gray)":"var(--light-mode-text)",document.querySelector("header").classList.toggle("dark-mode-child"),document.querySelector(".selected").classList.toggle("dark-mode-child"),document.querySelector(".search-box").classList.toggle("dark-mode-child"),document.querySelector(".search-input").classList.toggle("dark-mode-child"),document.querySelector(".back-btn").classList.toggle("dark-mode-child"),i.isInsideCountry&&document.querySelectorAll(".neighbors p").forEach((e=>e.classList.toggle("dark-mode-child"))),document.querySelector(".options-container").classList.toggle("dark-mode-child"),c()};var d;d=new URL(a("27Lyk").resolve("dODtX"),import.meta.url).toString();const u=function(e){const n=`\n  <div class="spinner">\n    <svg>\n      <use href="${t(d)}#icon-loader"></use>\n    </svg>\n  </div>\n`;document.querySelector(e).insertAdjacentHTML("beforeend",n)},p=async function(e){try{const t="all"===e?"https://restcountries.com/v3.1/all":(e=>`https://restcountries.com/v3.1/region/${e}`)(e),n=await fetch(t);(i.countries=await n.json()).forEach((e=>{var t;s.gridContainer.insertAdjacentHTML("beforeend",`\n        <div class="grid-item" >\n        <img\n          src="${(t=e).flags.svg}"\n          alt="image-1"\n          width="300"\n          height="200"\n        />\n        <div class="content-details">\n          <h2 class="item-title">${t.name.common}</h2>\n          <p class="item-population">Population: <span>${t.population.toLocaleString("en-US")}</span></p>\n          <p class="item-region">Region: <span>${t.region}</span></p>\n          <p class="item-capital">Capital: <span>${t.capital}</span></p>\n        </div>\n      </div>\n`)})),i.gridItems=document.querySelectorAll(".grid-item"),i.isDarkMode&&c(),document.querySelector(".spinner").remove()}catch(e){console.log(e)}},g=function(){s.optionsContainer.classList.toggle("active"),s.arrowUp.classList.toggle("active")},m=function(e){const t=e.target;i.currentRegion!==t.dataset.region&&(u("body"),document.querySelector(`.${i.currentRegion}`).classList.remove("active"),document.querySelector(`.${t.dataset.region}`).classList.add("active"),i.currentRegion=t.dataset.region,i.gridItems.forEach((e=>e.remove())),p(t.dataset.region))},y=async function(e){try{const n=await fetch((t=e,`https://restcountries.com/v3.1/name/${t}?fullText=true`)),[o]=await n.json(),r=await async function(e){return e?await Promise.all(e.map((async e=>{console.log(e);const t=await fetch((n=e,`https://restcountries.com/v3.1/alpha/${n}`));var n;const[o]=await t.json();return o.name.common}))):["No border countries"]}(o.borders);s.gridContainer.classList.add("deactive"),s.parentDetailsContainer.classList.add("active"),s.detailsContainer.insertAdjacentHTML("beforeend",function(e,t){return`\n  <div class="flag-container">\n    <img src="${e.flags.svg}" alt="Flag image" />\n  </div>\n\n  <div class="country-details-container">\n    <h2 class="country-title">${e.name.common}</h2>\n    <div class="country-details">\n      <p class="country-native-name">Native Name: <span>${Object.values(e.name.nativeName)[0].official}</span></p>\n      <p class="country-population">Population:  <span>${e.population.toLocaleString("en-US")}</span></p>\n      <p class="country-region">Region: <span>${e.region}</span></p>\n      <p class="country-subregion">Region: <span>${e.subregion}</span></p>\n      <p class="country-capital">Capital: <span>${e.capital}</span></p>\n      <p class="country-domain">Top Level Domain: <span>${e.tld[0]}</span></p>\n      <p class="country-languages">Languages: <span>${Object.values(e.languages).join(", ")}</span></p>\n      <p class="country-currency">Currencies: <span>${Object.values(e.currencies)[0].name}</span></p>\n    </div>  \n\n    <div class="border-countries">\n      <h4 class="border-country-title">Border Countries:</h4>\n\n      <div class="country-neighbors">\n        ${t.map((e=>`<p>${e}</p>`)).join(" ")}\n      </div>\n    </div>\n  </div>\n  `}(o,r)),i.isInsideCountry=!0,i.isDarkMode&&i.isInsideCountry&&document.querySelectorAll(".neighbors p").forEach((e=>e.classList.toggle("dark-mode-child")))}catch(e){console.log(e)}var t},v=function(e){const t=e.target.closest(".grid-item");if(!t)return;const n=t.querySelector(s.gridItemTitle).textContent;y(n)},f=function(){const e=this.value.toLowerCase();i.gridItems.forEach((t=>{const n=t.querySelector(s.gridItemTitle).textContent.toLowerCase();t.style.display=n.indexOf(e)>-1?"":"none"}))},h=function(){document.querySelector(s.flagContainer).remove(),document.querySelector(s.details).remove(),s.gridContainer.classList.remove("deactive"),s.parentDetailsContainer.classList.remove("active"),i.isInsideCountry=!1};var b;u("body"),p(i.currentRegion),b=l,s.themeBtn.addEventListener("click",b),(e=>{s.selected.addEventListener("click",e)})(g),(e=>{s.optionsContainer.addEventListener("click",e)})(m),(e=>{s.gridContainer.addEventListener("click",e)})(v),(e=>{s.searchInput.addEventListener("keyup",e)})(f),(e=>{s.backBtn.addEventListener("click",e)})(h);
//# sourceMappingURL=index.8032e45a.js.map
